@model TravelMe.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Or:</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
    {
        @Html.AntiForgeryToken()
        <div id="socialLoginList">
            <p>
                @foreach (AuthenticationDescription p in loginProviders)
                {
                    if (p.AuthenticationType.ToString().ToLower().Equals("google"))
                    {
                        <button type="submit" class="btn btn-google" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                    }
                    else if (p.AuthenticationType.ToString().ToLower().Equals("facebook"))
                    {
                        <button type="submit" class="btn btn-facebook" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                    }
                }
            </p>
        </div>
    }
}
