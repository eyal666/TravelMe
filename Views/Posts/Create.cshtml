@model TravelMe.ViewModel.PostViewModel

@{
  ViewBag.Title = "Create";
}
<script src="~/Scripts/place-search.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDiBYivTp_Vb6CwmoLDH_NW1lvDcmCCrWs&libraries=places&callback=initAutocomplete"
        async defer></script>
@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h3>Add a New Post</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-border col-md-10">
      <div class="form-group">
        @Html.LabelFor(model => model.Post.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Post.Title, new { htmlAttributes = new { @class = "form-control", style = "width:1000px;" } })
          @Html.ValidationMessageFor(model => model.Post.Title, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Post.Place.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @*<input id="place-search"
    placeholder="Search for a place..."
    class = "form-control", style = "width:1000px;"
    type="text" />*@
          @Html.EditorFor(model => model.Post.Place.Address, new { htmlAttributes = new { @class = "form-control", style = "width:1000px;", id = "place-search", type = "text", placeholder = "Search for a place..." } })
          @Html.ValidationMessageFor(model => model.Post.Place.Address, "", new { @class = "text-danger" })
          @Html.EditorFor(model => model.Post.Place.Latitude, new { htmlAttributes = new { id = "latitude", type = "hidden" } })
          @Html.EditorFor(model => model.Post.Place.Longtitude, new { htmlAttributes = new { id = "longtitude", type = "hidden" } })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Post.Body, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.TextAreaFor(model => model.Post.Body, new { @class = "form-control", style = "height:500px;" })
          @Html.ValidationMessageFor(model => model.Post.Body, "", new { @class = "text-danger" })
        </div>
      </div>

      <div>
          @Html.EditorFor(model => model.Post.ImageUrl, new { htmlAttributes = new { id = "image-url", type = "hidden" } })
          @Html.ValidationMessageFor(model => model.Post.ImageUrl, "", new { @class = "text-danger" })
      </div>


      <div class="form-group">
        @Html.LabelFor(model => model.Post.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.RadioButtonFor(m => m.Post.Rating, "1", htmlAttributes: new { @class = "control-label" }) @*TODO: change radio buttons to a real favorite bar*@
          @Html.RadioButtonFor(m => m.Post.Rating, "2")
          @Html.RadioButtonFor(m => m.Post.Rating, "3")
          @Html.RadioButtonFor(m => m.Post.Rating, "4")
          @Html.RadioButtonFor(m => m.Post.Rating, "5")
          @Html.ValidationMessageFor(model => model.Post.Rating, "", new { @class = "text-danger" })
        </div>
      </div>

    </div>
    <div class="form-group">
      <div class="col-md-10">
        @Html.Partial("_BackToListButtonPartial")
        <input type="submit" value="Create" class="btn btn-success btn-sm" />
      </div>
    </div>
  </div>
}
