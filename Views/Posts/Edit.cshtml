@model TravelMe.ViewModel.PostViewModel
@using TravelMe.Utils;

@{
  ViewBag.Title = "Edit";
}
<script src="~/Scripts/place-search.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDiBYivTp_Vb6CwmoLDH_NW1lvDcmCCrWs&libraries=places&callback=initAutocomplete"
        async defer></script>

@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h3>Edit Post</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Post.ID)

    <div class="row form-border">
      <div class="col-sm-9">
        <div class="form-group">
          @Html.LabelFor(model => model.Post.CategoryName, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.DropDownListFor(model => model.Post.CategoryName, new SelectList(Model.Categories, "CategoryName", "CategoryName"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Post.CategoryName, "", new { @class = "text-danger" })
          </div>
        </div>
        <div class="form-group">
          @Html.LabelFor(model => model.Post.Title, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Post.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Post.Title, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Post.Body, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Post.Body, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Post.Body, "", new { @class = "text-danger" })
          </div>
        </div>
        <div class="form-group">

          <div class="form-group">
            @Html.LabelFor(model => model.Post.Place.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.Post.Place.Address, new { htmlAttributes = new { @class = "form-control", id = "place-search", type = "text", placeholder = "Search for a place..." } })
              @Html.ValidationMessageFor(model => model.Post.Place.Address, "", new { @class = "text-danger" })
              @Html.EditorFor(model => model.Post.Place.Latitude, new { htmlAttributes = new { id = "latitude", type = "hidden" } })
              @Html.EditorFor(model => model.Post.Place.Longtitude, new { htmlAttributes = new { id = "longtitude", type = "hidden" } })
            </div>
          </div>

          <div class="form-group">
            <img id="img-box" class="img-post col-md-10" src="~/Content/Photos/default-pic.jpg" />
          </div>

          <div>
            @Html.EditorFor(model => model.Post.ImageUrl, new { htmlAttributes = new { id = "image-url", type = "hidden" } })
            @Html.ValidationMessageFor(model => model.Post.ImageUrl, "", new { @class = "text-danger" })
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.Post.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.Post.Rating, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.Post.Rating, "", new { @class = "text-danger" })

            </div>
          </div>
        </div>
      </div>
      <div class="form-group">
        <div class="col-md-10">
          @if (User.IsInRole(SD.AdminUserRole))
          {
            @Html.Partial("_BackToListButtonPartial")
          }
          <input type="submit" value="Save" class="btn btn-sm btn-success" />
        </div>
      </div>
    </div>
  </div>
}

